# -*- coding: utf-8 -*-
# Generated by Django 1.9 on 2016-05-25 19:38
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Building',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('building', models.CharField(max_length=100)),
                ('code', models.CharField(max_length=3)),
            ],
        ),
        migrations.CreateModel(
            name='Department',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('code', models.CharField(max_length=2, null=True)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Device',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('UniqueID', models.CharField(max_length=100, unique=True, verbose_name='Computer ID')),
                ('Location', models.CharField(max_length=100)),
                ('User', models.CharField(max_length=100)),
                ('Date', models.DateField(blank=True, null=True, verbose_name='Last Date Inspected')),
                ('Notes', models.TextField(blank=True, max_length=500)),
                ('Department', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='inventory.Department')),
            ],
            options={
                'ordering': ['UniqueID'],
            },
        ),
        migrations.CreateModel(
            name='HistoricalDevice',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('UniqueID', models.CharField(db_index=True, max_length=100, verbose_name='Computer ID')),
                ('Location', models.CharField(max_length=100)),
                ('User', models.CharField(max_length=100)),
                ('Date', models.DateField(blank=True, null=True, verbose_name='Last Date Inspected')),
                ('Notes', models.TextField(blank=True, max_length=500)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('Department', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='inventory.Department')),
            ],
            options={
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
                'verbose_name': 'historical device',
            },
        ),
        migrations.CreateModel(
            name='HistoricalPrinter',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('Name', models.CharField(db_index=True, max_length=100)),
                ('Location', models.CharField(max_length=100)),
                ('Brand', models.CharField(max_length=100)),
                ('Model', models.CharField(max_length=100)),
                ('IP', models.GenericIPAddressField()),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
                'verbose_name': 'historical printer',
            },
        ),
        migrations.CreateModel(
            name='HistoricalServer',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('Name', models.CharField(db_index=True, max_length=100)),
                ('Role', models.CharField(max_length=100)),
                ('IP', models.GenericIPAddressField()),
                ('Notes', models.TextField(blank=True, max_length=500)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
            ],
            options={
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
                'verbose_name': 'historical server',
            },
        ),
        migrations.CreateModel(
            name='HistoricalTicket',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('User', models.CharField(max_length=100, verbose_name='Submitted By')),
                ('Summary', models.TextField(max_length=1000)),
                ('created_at', models.DateTimeField(blank=True, editable=False)),
                ('updated_at', models.DateTimeField(blank=True, editable=False)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('Assignee', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
                'verbose_name': 'historical ticket',
            },
        ),
        migrations.CreateModel(
            name='OS',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('OS', models.CharField(max_length=100)),
            ],
            options={
                'ordering': ['OS'],
            },
        ),
        migrations.CreateModel(
            name='Ports',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.CharField(max_length=3, verbose_name='Port Number')),
                ('description', models.CharField(max_length=100)),
                ('room', models.CharField(max_length=3, verbose_name='Room Number')),
                ('building', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='inventory.Building')),
            ],
            options={
                'ordering': ['building', 'number'],
            },
        ),
        migrations.CreateModel(
            name='Printer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Name', models.CharField(max_length=100, unique=True)),
                ('Location', models.CharField(max_length=100)),
                ('Brand', models.CharField(max_length=100)),
                ('Model', models.CharField(max_length=100)),
                ('IP', models.GenericIPAddressField()),
            ],
        ),
        migrations.CreateModel(
            name='Server',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Name', models.CharField(max_length=100, unique=True)),
                ('Role', models.CharField(max_length=100)),
                ('IP', models.GenericIPAddressField()),
                ('Notes', models.TextField(blank=True, max_length=500)),
            ],
        ),
        migrations.CreateModel(
            name='ServerType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(max_length=100)),
            ],
            options={
                'ordering': ['type'],
            },
        ),
        migrations.CreateModel(
            name='Status',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Status', models.CharField(max_length=100)),
            ],
            options={
                'ordering': ['Status'],
            },
        ),
        migrations.CreateModel(
            name='Ticket',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('User', models.CharField(max_length=100, verbose_name='Submitted By')),
                ('Summary', models.TextField(max_length=1000)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('Assignee', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='TicketStatus',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Status', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Type',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Type', models.CharField(max_length=100)),
            ],
            options={
                'ordering': ['Type'],
            },
        ),
        migrations.AddField(
            model_name='ticket',
            name='Status',
            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='inventory.TicketStatus'),
        ),
        migrations.AddField(
            model_name='ticket',
            name='UniqueID',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='inventory.Device', verbose_name='Computer ID'),
        ),
        migrations.AddField(
            model_name='server',
            name='ServerType',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='inventory.ServerType'),
        ),
        migrations.AddField(
            model_name='historicalticket',
            name='Status',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='inventory.TicketStatus'),
        ),
        migrations.AddField(
            model_name='historicalticket',
            name='UniqueID',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='inventory.Device'),
        ),
        migrations.AddField(
            model_name='historicalticket',
            name='history_user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='historicalserver',
            name='ServerType',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='inventory.ServerType'),
        ),
        migrations.AddField(
            model_name='historicalserver',
            name='history_user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='historicaldevice',
            name='OS',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='inventory.OS'),
        ),
        migrations.AddField(
            model_name='historicaldevice',
            name='Status',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='inventory.Status'),
        ),
        migrations.AddField(
            model_name='historicaldevice',
            name='Type',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='inventory.Type'),
        ),
        migrations.AddField(
            model_name='historicaldevice',
            name='history_user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='device',
            name='OS',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='inventory.OS'),
        ),
        migrations.AddField(
            model_name='device',
            name='Status',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='inventory.Status'),
        ),
        migrations.AddField(
            model_name='device',
            name='Type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='inventory.Type'),
        ),
    ]
